#include <stdio.h>
#include <conio.h>

/* int add(int i, int j)
{
	int result = i+j;
	return result;
}
*/
    int main()
{	
/*	int d;
	d = add(3,4);
	printf("%d \n",d);
*/
//======================================================================================================================================
/*	
//배열선언과 접근의 예 
	int array[10];  // 배열 선언 : 방이 10개라는 뜻 
	
	// array[s] =10; 는 s번째가 아닌 's+1번째'에 10을 대입하시오. 라는 뜻 
	// index가 0부터 시작하기 때문이다. 
	array[0]=10;  // 첫 번째 요소 접근
	array[1]=20;  // 두 번째 요소 접근
	array[2]=30;  // 세 번째 요소 접근
	
	return 0; 
*/
//======================================================================================================================================
/*
//선언과 동시에 초기화
	int arr1[5]={1,2,3,4,5};
	int arr2[]={1,3,5,7,9};  // 방이 몇갠지는 모르겠지만 데이터는 5개이구나. 그래서 방을 5개 잡아줄게. 
	int arr3[5]={1,2};  // 방은 5개인데 데이터는 2개네? 앞에서 부터 순차적으로 채운다. 나머지는 초기화가 안 된 쓰레기값.
*/
//======================================================================================================================================
/*
//문자열 변수
	char str1[5]="Good";  // Good0이라고 나온다. (0=null) 4글자니까 4개만 쓰면 곤란해짐. 
	char str2[]="morning";  // 알아서 방 7개 잡는다.
	char str3[10]="everybody";
	
	printf("%s \n", str1);
	printf("%s %s \n", str1, str2);
	printf("%s %s %s \n", str1, str2, str3);
	
	return 0; 
*/
//======================================================================================================================================
/*
//예시
    int i;
	char ch;
	char str[6]="Hello";
	
	printf("--변경 전 문자열--\n");
	printf("%s \n", str);
	
	for(i=0; i<6; i++)
	{
		printf("%c /", str[i]);
	}
	
	for(i=0; i<3; i++)  // 알파벳 순서를 뒤집어 놓으셨다. 
	{
		ch=str[4-i];
		str[4-i]=str[i];
		str[i]=ch;
	}
	
	printf("\n\n--변경 후 문자열--\n");
	printf("%s \n",str);
	
	return 0;
*/
//=====================================================================================================================================	
/*
//예시2 
	char buf[1024];  // buf라는놈(array) 자체가 주소를 나타내고 있음. 
	
	while(1)
	{
		scanf("%s", buf);  // &buf라고 썼었는데, array를 받을때는 안 붙힌다.
	    printf("입력 문자열은 %s입니다.\n", buf);
	}
	
	return 0;
*/
//======================================================================================================================================
//다양한 형태의 배열 요소 접근 방법
/*
    int a[3][2]={ {1,2},
	              {3,4},
				  {5,6}
				} ;
    
    printf("a[0] : %d\n", a[0]);  // 배열 요소의 주소를 알려준다. a의 첫번째 배열 주소. 
    printf("*(a+0) : %d\n", *(a+0));
    
    printf("a[1] : %d\n", a[1]);  // a의 두번째 배열 주소.  a[0]의 결과와 8 차이난다(2개의 integer씩 건너뛰었기 때문.).
    printf("*(a+1) : %d\n", *(a+1));  
    
    printf("a[2] : %d\n", a[2]);  //a의 세번째 배열 주소.
    printf("*(a+2) : %d\n", *(a+2));
    
    printf("%d, %d \n", a[1][0], (*(a+1))[0]);  // a[1][0] : 세로2번째, 가로1번째 
    printf("%d, %d \n", a[1][2], *(a[1]+2));  // a[1][2] : 세로2번째, 가로3번째, *(a[1]+2) : a의 두번째 배열 주소에서 integer 2를 더한 값. 
	                                          // 인데 가로는 3번째가 없어서 일렬로 있다고 가정하고 셌을때 5이다. 
    printf("%d, %d \n", a[2][1], *(*(a+2)+1));  // a[2][1] : 세로3번째, 가로2번째 
    
    return 0; 
}
*/
//=======================================================================================================================================


